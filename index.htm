<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<link rel="stylesheet" href="scss/style.css" />
		<title>Portfolio</title>
		<style>
			body { margin: 0; }
			html {
    width: 100%;
    height: 100%;
    
    background: #0de4b5; /* Old browsers */
    background: -moz-linear-gradient(left,  #0de4b5 0%, #0a296b 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(left,  #0de4b5 0%,#0a296b 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(left bottom,  #0de4b5 0%,#0a296b 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#0de4b5', endColorstr='#0a296b',GradientType=0 ); /* IE6-9 */
  }
  
		</style>
	</head>
	<body>
		<div id="canvas" ><span class="text-canvas">Welcome!</span></div>
		<script src="node_modules/three/build/three.js"></script>
		<script>
 var renderer, scene, camera, composer, circle, skelet, particle;

window.onload = function() {
  init();
  animate();
}

function init() {
  renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
  renderer.setPixelRatio((window.devicePixelRatio) ? window.devicePixelRatio : 1);
  renderer.setSize(window.innerWidth, window.innerHeight);
  renderer.autoClear = false;
  renderer.setClearColor(0x000000, 0.0);
  document.getElementById('canvas').appendChild(renderer.domElement);

  scene = new THREE.Scene();

  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);
  camera.position.z = 250;
  scene.add(camera);

  circle = new THREE.Object3D();
  skelet = new THREE.Object3D();
  particle = new THREE.Object3D();

  scene.add(circle);
  scene.add(particle);

  var geometry = new THREE.BoxGeometry( 4,4, 4 );
  var geom = new THREE.BoxGeometry( 4, 4, 4 );


  var material = new THREE.MeshPhongMaterial({
    color: 0xffffff
  });

  for (var i = 0; i < 20; i++) {
    var mesh = new THREE.Mesh(geometry, material);
    mesh.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).normalize();
    mesh.position.multiplyScalar(90 + (Math.random() * 300));
    mesh.rotation.set(Math.random() * 2, Math.random() * 2, Math.random() * 2);
    
	particle.add(mesh);
  }

  var mat = new THREE.MeshPhongMaterial({
    color: 0xffffff
  });


  var planet = new THREE.Mesh(geom, mat);
  planet.scale.x = planet.scale.y = planet.scale.z = 16;
  circle.add(planet);


  var ambientLight = new THREE.AmbientLight(0x999999 );
  scene.add(ambientLight);
  
  var lights = [];

lights[1] = new THREE.DirectionalLight( 0x0a296b, 1 );
lights[1].position.set( 0.75, 1, 0.5 );
lights[2] = new THREE.DirectionalLight( 0x0de4b5, 1 );
lights[2].position.set( -0.75, 1, 0.5 );

scene.add( lights[1] );
scene.add( lights[2] );
  

  window.addEventListener('resize', onWindowResize, false);

};

function onWindowResize() {
  camera.aspect = window.innerWidth / window.innerHeight;
  camera.updateProjectionMatrix();
  renderer.setSize(window.innerWidth, window.innerHeight);
}

function animate() {
  requestAnimationFrame(animate);

  particle.rotation.x += 0.0000;
  particle.rotation.y -= 0.0060;
  circle.rotation.x -= 0.0020;
  circle.rotation.y -= 0.0030;
  skelet.rotation.x -= 0.0010;
  skelet.rotation.y += 0.0020;
  renderer.clear();

  renderer.render( scene, camera )
};


		</script>
	</body>
</html>